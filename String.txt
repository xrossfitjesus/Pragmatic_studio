= SSttrriinngg  <<  OObbjjeecctt

------------------------------------------------------------------------------
= IInncclluuddeess::
Comparable (from ruby core)

(from ruby core)
------------------------------------------------------------------------------
A String object holds and manipulates an arbitrary sequence of bytes,
typically representing characters. String objects may be created using
String::new or as literals.

Because of aliasing issues, users of strings should be aware of the methods
that modify the contents of a String object.  Typically, methods with names
ending in ``!'' modify their receiver, while those without a ``!'' return a
new String.  However, there are exceptions, such as String#[]=.

Rake extension methods for String.
------------------------------------------------------------------------------
= CCllaassss  mmeetthhooddss::

  new
  try_convert

= IInnssttaannccee  mmeetthhooddss::

  %
  *
  +
  <<
  <=>
  ==
  ===
  =~
  []
  []=
  ascii_only?
  block_scanf
  bytes
  bytesize
  byteslice
  capitalize
  capitalize!
  casecmp
  center
  chars
  chomp
  chomp!
  chop
  chop!
  chr
  clear
  codepoints
  concat
  count
  crypt
  delete
  delete!
  downcase
  downcase!
  dump
  each_byte
  each_char
  each_codepoint
  each_line
  empty?
  encode
  encode!
  encoding
  end_with?
  eql?
  ext
  force_encoding
  getbyte
  gsub
  gsub!
  hash
  hex
  include?
  index
  initialize_copy
  insert
  inspect
  intern
  iseuc
  isjis
  issjis
  isutf8
  kconv
  length
  lines
  ljust
  lstrip
  lstrip!
  match
  next
  next!
  oct
  ord
  parse_csv
  partition
  pathmap
  pathmap_explode
  pathmap_partial
  pathmap_replace
  prepend
  replace
  reverse
  reverse!
  rindex
  rjust
  rpartition
  rstrip
  rstrip!
  scan
  scanf
  setbyte
  shellescape
  shellsplit
  size
  slice
  slice!
  split
  squeeze
  squeeze!
  start_with?
  strip
  strip!
  sub
  sub!
  succ
  succ!
  sum
  swapcase
  swapcase!
  to_c
  to_d
  to_f
  to_i
  to_r
  to_s
  to_str
  to_sym
  toeuc
  tojis
  tolocale
  tosjis
  toutf16
  toutf32
  toutf8
  tr
  tr!
  tr_s
  tr_s!
  unpack
  upcase
  upcase!
  upto
  valid_encoding?

